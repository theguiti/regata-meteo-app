{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import streamlit as st\
import openai\
import datetime\
\
# Configura tu clave de OpenAI\
openai.api_key = st.secrets["OPENAI_API_KEY"]\
\
# Base de conocimiento local (C\'e1diz)\
zonas_locales = \{\
    "C\'e1diz": \{\
        "viento_tipico": "Levante o Poniente con influencia t\'e9rmica en horas centrales.",\
        "efectos_locales": "Roles frecuentes hacia la derecha con t\'e9rmico, corriente leve bajando en bajamar, ola corta de 0.5-0.8 m."\
    \}\
\}\
\
# T\'edtulo de la app\
st.title("Parte Meteorol\'f3gico T\'e1ctico para Regatas Inshore")\
\
# Formulario de entrada\
with st.form("formulario"):\
    zona = st.selectbox("Zona de regata", list(zonas_locales.keys()))\
    fecha = st.date_input("Fecha de la regata", datetime.date.today())\
    hora_inicio = st.time_input("Hora inicio", datetime.time(13, 0))\
    hora_fin = st.time_input("Hora fin", datetime.time(16, 0))\
    modelo = st.selectbox("Modelo meteorol\'f3gico preferido", ["AROME", "ECMWF", "Otro"])\
    incluir_consejos = st.checkbox("Incluir consejos t\'e1cticos", value=True)\
    parte_manual = st.text_area("Parte meteorol\'f3gico base (manual, opcional)",\
                                 "Viento del ESE 14-17 nudos, cielo despejado, mar en calma, corriente bajando")\
    enviado = st.form_submit_button("Generar parte")\
\
# Cuando se env\'eda el formulario\
def generar_prompt(zona, fecha, hora_inicio, hora_fin, modelo, incluir_consejos, parte_manual):\
    local = zonas_locales.get(zona, \{\})\
    prompt = f"""\
Genera un parte meteorol\'f3gico profesional para una regata ol\'edmpica inshore.\
\
Zona: \{zona\}\
Fecha: \{fecha.strftime('%d/%m/%Y')\}\
Horario: \{hora_inicio.strftime('%H:%M')\} - \{hora_fin.strftime('%H:%M')\}\
Modelo meteorol\'f3gico: \{modelo\}\
\
Parte base:\
\{parte_manual\}\
\
An\'e1lisis local:\
- Viento t\'edpico: \{local.get('viento_tipico', '')\}\
- Efectos locales: \{local.get('efectos_locales', '')\}\
"""\
    if incluir_consejos:\
        prompt += "\\nIncluye consejos t\'e1cticos por tramo de regata."\
    return prompt\
\
if enviado:\
    prompt = generar_prompt(zona, fecha, hora_inicio, hora_fin, modelo, incluir_consejos, parte_manual)\
\
    with st.spinner("Generando parte t\'e1ctico..."):\
        respuesta = openai.ChatCompletion.create(\
            model="gpt-4",\
            messages=[\
                \{"role": "system", "content": "Eres un meteor\'f3logo experto en regatas inshore."\},\
                \{"role": "user", "content": prompt\}\
            ]\
        )\
        texto_generado = respuesta.choices[0].message.content\
        st.subheader("\uc0\u55357 \u56516  Parte generado")\
        st.write(texto_generado)\
        st.download_button("Descargar parte como .txt", data=texto_generado, file_name="parte_regata.txt")\
}